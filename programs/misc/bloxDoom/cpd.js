function getBlockIn(_){return map[Math.floor(_[1]/8)][Math.floor(_[0]/8)]}function castFromPos(_,$){let t=0,n=Math.sin(toRad*$),o=Math.cos(toRad*$),r=[..._];for(;1!=getBlockIn(r)&&t<max_dist;)t+=2,r[0]+=2*n,r[1]+=2*o;if(t>=max_dist)return -1;for(;1==getBlockIn(r);)t-=.5,r[0]-=.5*n,r[1]-=.5*o;return t}function init(){fov=128,max_dist=64,toRad=Math.PI/180,facing=0,isInit=!0}function scan(_,$){let t=[];for(let n=0;n<fov;n++)t.push(castFromPos(_,n+$-fov/2));return t}function tryMove(_,$){let t=[...pos];return pos+=_,getBlockIn(pos+=$)&&(pos=t),1}function tick(){let _=scan(pos,facing);for(let $=0;$<128;$++)display[$].forEach(t=>inBounds(t-64,-_[$],_[$]));return facing+=.3*(s[2]>96-s[2]<32),s[0]&&s[1]&&(s[0]/=Math.sqrt(2),s[1]/=Math.sqrt(2)),pos,tryMove(Math.sin(facing)*s[0],0),tryMove(0,Math.cos(facing)*s[1]),task=["updateDisplay",["execute"]],1}map=[[1,1,1,1,1,1,1,1],[1,0,0,0,0,1,0,1],[1,0,0,1,1,1,0,1],[1,0,0,1,0,0,0,1],[1,1,0,0,0,1,0,1],[1,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1]];try{isInit}catch{init()}tick();
